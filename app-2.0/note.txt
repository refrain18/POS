=== Sistem Manajemen Mumtaza ===

___Kebutuhan Sistem/Fitur___
- tambah cetak pada menu gaji pegawai
- tambah cetak pada setiap file laporan yang tersisa
- tambah pagination pada seluruh daftar data yang tersedia
- menampilkan data rata-rata harga dari tabel stok_masuk berdasarkan bulan & tahun dari filter pada hal daftar harga produk perbulan
- belum ada validasi pada penambahan data/edit/hapus pegawai

____Pembaharuan Sistem____
- ubah form/logika tambah produk dan tambah stok produk
- ubah struktur tabel produk_salon dan tabel stok_masuk

___Bug___
- data alamat tidak tampil pada form edit data pegawai
- proses edit pada stok masuk mingguan tidak berfungsi
- proses edit pada stok keluar mingguan tidak berfungsi
- belum ada data yang tampil pada daftar stok keluar bulanan

___File Backend kosong___
ap_hapus
ap_insert
ap_update
dh_cetak_detail
dh_cetak
k_hapus
k_insert
k_update
ra_cetak_detail
ra_cetak
rk_cetak_detail
rk_cetak
rsk_cetak_detail
rsk_cetak
rsm_cetak_detail
rsm_cetak

=== SOP ===

- Timer (Done)
sop_rundown jika sudah klik start di form tambah sop maka akan pergi ke menu sop rundown di menu itu ada tombol start dan stop, 
jika waktu terpenuhi maka akan masuk ke database complete jika waktu di stop dan tidak terpenuhi maka akan masuk ke database incomplete 
dan mengeluarkan textfiled keterangan, waktu tersimpan otomatis jika sudah selesai ataupun di stop.

NB : Singkatan nama file...
ap - absen pegawai
dh/daftar_hpp - daftar harga produk perbulan
dp - daftar produk
gp - gaji pegawai
jp - jenis produk
k - kinerja
ra - rekap absen
sk - stok keluar
sm - stok masuk
rk - rekap kinerja
rsk - rekap stok keluar
rsm - rekap stok masuk
pg - pegawai

=== Clipboard ===

- sop.php (home)

<a class="tombol" href="?hal=sop_tambah">Tambah</a>
<table class="table">
   <thead>
      <tr>
         <th>No</th>
         <th>Nama Pegawai</th>
         <th>Jenis Perawatan</th>
         <th>Foto Pegawai</th>
         <th>Foto Bukti Customer</th>
         <th>Waktu Perawatan</th>
         <th>Hasil Rundown</th>
         <th>Keterangan</th>
         <th>Komisi</th>
         <?php if($level == 'owner') : ?>
         <th>Aksi</th>
         <?php endif; ?>
      </tr>
   </thead>
   <tbody>
<?php
   $query = mysqli_query($con, "SELECT sop.*, pegawai.nama, jenis_perawatan.nama_perawatan, sop.komisi FROM sop JOIN pegawai ON  
                                sop.pegawai_id = pegawai.pegawai_id JOIN jenis_perawatan ON sop.jp_id = jenis_perawatan.jp_id 
                                ORDER BY id_sop DESC");
   $no = 0;
   while($data = mysqli_fetch_array($query)){
      $no++;
?>
      <tr>
         <td><?= $no ?></td>
         <td><?= $data['nama'] ?></td>
         <td><?= $data['nama_perawatan'] ?></td>
         <td><?= $data['foto_pegawai'] ?></td>
         <td><?= $data['foto_customer'] ?></td>
         <td><?= $data['waktu'] ?></td>
         <td><?= $data['hasil_rundown'] ?></td>
         <td><?= $data['keterangan'] ?></td>
         <td><?= $data['komisi'] ?></td>
         <?php if($level == 'owner') : ?>
            <td>
               <a class="tombol edit" href="?hal=sop_edit&id_sop=<?= $data['id_sop'] ?>"> Edit </a>
               <a class="tombol hapus" href="?hal=sop_hapus&id_sop=<?= $data['id_sop'] ?>" onclick="return confirm('Anda yakin akan meghapus data ini?');"> Hapus </a>
            </td>
         <?php endif; ?>
     </tr>
<?php
   }
?>
   </tbody>
</table>

- script.js (timer class)

// Timer Class
class Timer {
  #resultTime;
  #timer;

  constructor() {
    this.getSopTime();
  }

  #getSopTime() {
    // Deklarasi Variabel
    var http = new XMLHttpRequest();
    var req, res;

    // Menjalankan fungsi ketika response siap
    http.onreadystatechange = function () {
      // Cek Status response
      if (this.readyState == 4 && this.status == 200) {
        // Konversi string response ke format json
        res = JSON.parse(this.responseText);

        if (res.status) {
          // Memulai Timer
          Timer.startTimer(res.data);
        } else {
          // Error Handling
          alert("Terjadi kesalahan pada Server. Pesan Error : " + res.message);
        }
      }
    };
    // Mengirim Request
    http.open("GET", "request/sop-time.php", true);
    http.send();
  }

  #startTimer(timeEstimation) {
    var sec, min, hrs;
    sec = 0;
    min = 0;
    hrs = 0;

    var targetTime;
    targetTime = timeEstimation;

    this.timer = setInterval(function () {
      sec = parseInt(sec);
      min = parseInt(min);
      hrs = parseInt(hrs);

      sec++;
      if (sec >= 60) {
        min++;
        sec = 0;
      }
      if (min >= 60) {
        hrs++;
        min = 0;
        sec = 0;
      }
      if (sec < 10 || sec == 0) {
        sec = '0' + sec;
      }
      if (min < 10 || min == 0) {
        min = '0' + min;
      }
      if (hrs < 10 || hrs == 0) {
        hrs = '0' + hrs;
      }

      var durasi = document.getElementById("hasilDurasiSop");
      if (durasi != null) {
        durasi.innerHTML = hrs + ':' + min + ':' + sec;
        resultTime = hrs + ':' + min + ':' + sec;
      }

      if (Timer.resultTime >= targetTime) {
        clearInterval(Timer.timer);
        alert("Waktu telah selesai!");
        Timer.insertSop(Timer.resultTime);
      }
    }, 1000);
  }

  stopTimer() {
    var conf = confirm('Anda yakin akan menghentikan Timer?');
    if (conf == true) {
      clearInterval(Timer.timer);
      var ket = prompt("Waktu telah dihentikan, silahkan masukan keterangan penghentian waktu...");
      Timer.insertSop(Timer.resultTime, ket);
    }
  }

  #insertSop(resTime, ket = "-") {
    // Deklarasi Variabel
    var http = new XMLHttpRequest();
    var req, res;

    // Mengambil Data yang akan di kirim
    const dataSet = {
      completedTime: resTime,
      keterangan: ket
    };

    // Menyiapkan Request
    req = `hasilDurasiSop=${dataSet.completedTime}&ket=${dataSet.keterangan}`;

    // Menjalankan fungsi ketika response siap
    http.onreadystatechange = function () {
      // Cek Status response
      if (this.readyState == 4 && this.status == 200) {
        // Konversi string response ke format json
        res = JSON.parse(this.responseText);

        if (res.status) {
          // Menampilkan Alert Sukses
          alert(res.message);
          window.location.href = "?hal=sop";
        } else {
          // Error Handling
          alert("Terjadi kesalahan pada Server. Pesan Error : " + res.message);
        }
      }
    };
    // Mengirim Request
    http.open("POST", "konten/sop_insert.php", true);
    http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    http.send(req);
  }
}